kindle-highlights
============

*Get your Kindle highlights via Amazon's Kindle site*

There's currently no Kindle API, so I built a scraper.

**Required gems**

<strike>* ruby-aaws</strike>
* Mechanize

<strike>The ruby-aaws gem assumes you have an Associates tracking code, and Product API credentials.  A handy guide for setting up the ruby-aaws gem can be found at:

[http://snippets.aktagon.com/snippets/413-How-to-access-Amazon-product-data-with-Ruby-AWS-and-the-Amazon-Associates-Web-Services-API](http://snippets.aktagon.com/snippets/413-How-to-access-Amazon-product-data-with-Ruby-AWS-and-the-Amazon-Associates-Web-Services-API).

The kindle-highlights gem depends on the ruby-aaws gem to grab data about the product from which the highlight came, and will not work without ruby-aaws being set up properly.</strike>

**Install**
	
	gem install kindle-highlights
**Use**

	require 'kindle-highlights'

	# to create a new KindleHighlight object, give it your Amazon email address and password	
	kindle = KindleHighlight.new("foo@bar.com", "password")
	
	kindle.highlights.each do |highlight|
		highlight.annotation_id # => a unique value for each highlight, generated by Amazon
		highlight.content # => the actual highlight text
		highlight.asin # => the Amazon ASIN for the highlight's product
		highlight.author # => author of the book from which the highlight is taken
		highlight.title # => title of the book from which the highlight is taken
	end

**Use (with v0.06)**

	require 'kindle-highlights'

	# to create a new KindleHighlight object, give it your Amazon email address and password
	kindle = KindleHighlight.new("foo@bar.com", "password", { :page_limit => 100, :wait_time => 2 }) do | h |
		puts "loading... [#{h.books.last.title}]"
	end

	File.open("out.xml", "w") do | f |
		f.puts kindle.to_xml
	end

**Output (with v0.06)**
XML output example

	<?xml version="1.0"?>
	<books>
		<book>
			<asin>ASIN</asin>
			<title>TITLE</title>
			<author>AUTHOR</author>
			<highlights>
				<annotation_id>ANNOTATION_ID1</annotation_id>
				<content>CONTENT1</content>
			</highlights>
			<highlights>
				<annotation_id>ANNOTATION_ID2</annotation_id>
				<content>CONTENT2</content>
			</highlights>
		</book>
	</books>

**Updates**

* Added annotation_id to Highlight class (0.0.3)
* Added dependencies to Mechanize and ruby-aaws within gemspec (0.0.4)
* Cache AWS Product API results in a Hash, keyed on ASIN, to save time (0.0.5)
* Get Small response group from Amazon (0.0.5)
* Added multiple pager load and xml output (0.0.6)

**TODO**

<strike>* Get all highlights; Amazon currently does an infinite-scroll at the page bottom which loads highlights dynamically.  Currently the gem only gets the first "page" of highlights.</strike>
* Exception handling
* Documentation
* Tests